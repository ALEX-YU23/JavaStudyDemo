/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.2.11.v20150529
 * Generated at: 2021-07-16 02:45:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class _01_后台获取数据展示到table_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta charset=\"utf-8\">\r\n");
      out.write("\t\t<title>table模块快速使用</title>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"./layui/css/layui.css\" media=\"all\">\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<div class=\"layui-container\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<table id=\"demo\" lay-filter=\"test\"></table>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<script src=\"./layui/layui.js\"></script>\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t\tlayui.use('table', function() {\r\n");
      out.write("\t\t\t\tvar table = layui.table;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t//第一个实例\r\n");
      out.write("\t\t\t\ttable.render({\r\n");
      out.write("\t\t\t\t\telem: '#demo',\r\n");
      out.write("\t\t\t\t\theight: 500,\r\n");
      out.write("\t\t\t\t\turl: 'data.json' //数据接口\r\n");
      out.write("\t\t\t\t\t\t,\r\n");
      out.write("\t\t\t\t\tpage: true //开启分页\r\n");
      out.write("\t\t\t\t\t\t,\r\n");
      out.write("\t\t\t\t\tcols: [\r\n");
      out.write("\t\t\t\t\t\t[ //表头\r\n");
      out.write("\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\tfield: 'id',\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle: 'ID',\r\n");
      out.write("\t\t\t\t\t\t\t\twidth: 80,\r\n");
      out.write("\t\t\t\t\t\t\t\tsort: true,\r\n");
      out.write("\t\t\t\t\t\t\t\tfixed: 'left'\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\tfield: 'username',\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle: '用户名',\r\n");
      out.write("\t\t\t\t\t\t\t\twidth: 80\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\tfield: 'sex',\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle: '性别',\r\n");
      out.write("\t\t\t\t\t\t\t\twidth: 80,\r\n");
      out.write("\t\t\t\t\t\t\t\tsort: true\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\tfield: 'city',\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle: '城市',\r\n");
      out.write("\t\t\t\t\t\t\t\twidth: 80\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\tfield: 'sign',\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle: '签名',\r\n");
      out.write("\t\t\t\t\t\t\t\twidth: 177\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\tfield: 'experience',\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle: '积分',\r\n");
      out.write("\t\t\t\t\t\t\t\twidth: 80,\r\n");
      out.write("\t\t\t\t\t\t\t\tsort: true\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\tfield: 'score',\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle: '评分',\r\n");
      out.write("\t\t\t\t\t\t\t\twidth: 80,\r\n");
      out.write("\t\t\t\t\t\t\t\tsort: true\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\tfield: 'classify',\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle: '职业',\r\n");
      out.write("\t\t\t\t\t\t\t\twidth: 80\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\tfield: 'wealth',\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle: '财富',\r\n");
      out.write("\t\t\t\t\t\t\t\twidth: 135,\r\n");
      out.write("\t\t\t\t\t\t\t\tsort: true\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t]\r\n");
      out.write("\t\t\t\t\t]\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
